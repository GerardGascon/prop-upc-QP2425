plugins {
    id 'java'
    id 'application'
}

group = 'edu.upc.prop.scrabble'
version = '1.0-SNAPSHOT'
rootProject.layout.buildDirectory = 'EXE'

ext {
    javaMainClass = 'edu.upc.prop.scrabble.Main'
}

application {
    mainClassName = javaMainClass
}

jar {
    manifest {
        attributes 'Main-Class': javaMainClass
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}


repositories {
    mavenCentral()
}

dependencies {
    // this is just an example of importing an external library, you do not need to use it in your project
    implementation 'com.google.code.gson:gson:2.8.9'
    testImplementation('junit:junit:4.13.1')
}

sourceSets {
    main {
        java {
            // Include FONTS/main as the main source directory
            srcDir 'FONTS/main'
        }
    }

    test {
        java {
            // Include FONTS/test as the test source directory
            srcDir 'FONTS/test'
        }
    }
}

tasks.register('copyTextFiles', Copy) {
    from 'FONTS/main'
    into "$rootProject.layout.buildDirectory/classes/java/main"
    include '**/*.txt'
}

tasks.register('generateRunFiles') {
    doLast {
        def batchFile = file("${rootProject.layout.buildDirectory}/classes/java/main/scrabble.bat")
        batchFile.text = '@echo off\n' +
                'java edu.upc.prop.scrabble.Main'

        def shellFile = file("${rootProject.layout.buildDirectory}/classes/java/main/scrabble.sh")
        shellFile.text = '#!/bin/bash\n' +
                'java edu.upc.prop.scrabble.Main'
    }
}

tasks.named('build') {
    dependsOn copyTextFiles
    dependsOn generateRunFiles
}

tasks.named('run') {
    dependsOn copyTextFiles
    dependsOn generateRunFiles
    standardInput = System.in
}
